@model Incharge.Service.PagingService.PaginatedList<Incharge.Models.Sale>;
@using Microsoft.AspNetCore.Identity;
@using Incharge.Service.PagingService;
@using Incharge.ViewModels;
@inject SignInManager<Incharge.Models.User> SignInManager;
@inject UserManager<Incharge.Models.User> UserManager;

@{
    ViewData["Title"] = "Index";
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<nav class="navbar-brand mb-5">
    <div class="row align-content-center">
        <h1 class="text-black m-3 align-text-top font-bold">Sales</h1>
    </div>
    <div class="row align-content-center pt-3 pb-1">
        <div class="col ms-3">
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="AddSale" class="btn btn-primary">Add Sales</a>
            }
        </div>
        @*Add filter column*@

        <form asp-action="Index" method="get" class="col-8">
            <div class="d-flex gap-1 flex-row-reverse">
                <input class="btn btn-outline-primary" type="submit" value="Search" aria-label="search" />
                <input class="form-control w-25" type="text" placeholder="Search" aria-label="Search" name="SearchString" value="@ViewData["CurrentFilter"]" />
            </div>
        </form>

        <div class="col-2 align-content-end">
            <a asp-action="Index" class="btn btn-primary">Back to Full List</a>
        </div>
    </div>

</nav>
<div class="container">
    <table class="table-responsive table-hover table">
        <thead>
            <tr>
                <th scope="col" class="col">Product Name</th>
                <th scope="col" class="col">Payment Type</th>
                <th scope="col" class="col">Date</th>
                <th scope="col" class="col">Total Price</th>
                <th scope="col" class="col">Client Name</th>
                <th scope="col" class="col-1"></th>
                <th scope="col" class="col-1"></th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Product.Name</td>
                    <td>@item.PaymentType</td>
                    <td>@item.Date</td>
                    <td>$@item.TotalPrice</td>
                    <td>@item.Client.FirstName @item.Client.LastName</td>
                    <td>
                        <div class="col-1">
                            <a asp-action="EditSale" asp-route-Uuid="@item.Uuid" class="btn btn-primary"><i class="bi bi-pencil-square"></i></a>
                        </div>
                    </td>
                    <td>
                        <div class="col-1">
                            <form asp-action="DeleteSale" asp-route-Uuid="@item.Uuid" method="post">
                                <button type="submit" class="btn btn-danger"><i class="bi bi-trash3"></i></button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </tbody>

    </table>
    <div class="btn-group border-bottom">
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled">
            <i class="bi bi-arrow-left"></i>
        </a>
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled">
            <i class="bi bi-arrow-right"></i>
        </a>
    </div>
</div>