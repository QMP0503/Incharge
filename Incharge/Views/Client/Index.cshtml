@model Incharge.Service.PagingService.PaginatedList<Incharge.Models.Client>
@using Microsoft.AspNetCore.Identity;
@using Incharge.Service.PagingService;
@using Incharge.ViewModels;
@inject SignInManager<Incharge.Models.User> SignInManager;
@inject UserManager<Incharge.Models.User> UserManager;

@{
    var clientVM = new ClientVM();
}
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}


@{
    ViewData["Title"] = "Index";
}
<nav class="navbar-brand mb-5">
    <div class="row align-content-center">
        <h1 class="text-black m-3 align-text-top font-bold">Client</h1>
    </div>
    <div class="row align-content-center pt-3 pb-3">
        <div class="col pr-2">
            <a asp-action="AddClient" class="btn btn-primary">Add New Client</a>
        </div>

        @*Add filter column*@

        <form asp-action="Index" method="get" class="col-8">
                <div class="d-flex gap-1 flex-row-reverse">
                    <input class="btn btn-outline-primary" type="submit" value="Search"aria-label="search"/>
                    <input class="form-control w-25" type="text" placeholder="Search" aria-label="Search" name="SearchString" value="@ViewData["CurrentFilter"]" />
            </div>
        </form>

        <div class="col-2 align-content-end">
            <a asp-action="Index" class="btn btn-primary">Back to Full List</a>
        </div>

    </div>

</nav>
<div class="container">
    <table class="table-responsive table-hover table">
        <thead>
            <tr>
                <th scope="col" class="col-1"></th> @*will juat be colour indicator for if the client is signed in/out or payment is overdued.*@
                <th scope="col" class="col">First</th>
                <th scope="col" class="col">Last</th>
                <th scope="col" class="col">Phone</th>
                <th scope="col" class="col">Status</th>
                <th scope="col" class="col">Update Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <div class="col-1">
                            
                           
                            @if (item.Status == "Signed In")
                            {
                                <a asp-action="Details" asp-route-Uuid="@item.Uuid" class="btn btn-success"><i class="bi bi-person"></i></a>
                            }
                            @if (item.Status == "Signed Out" || item.Status == null)
                            {
                                <a asp-action="Details" asp-route-Uuid="@item.Uuid" class="btn btn-warning"><i class="bi bi-person"></i></a>

                            }
                            @if(item.Status == "Overdue")
                            {
                                <a asp-action="Details" asp-route-Uuid="@item.Uuid" class="btn btn-danger"><i class="bi bi-person"></i></a>
                            }
                        </div>
                    </td>
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.Phone</td>
                    <td>@item.Status</td>
                    <td>
                        <div class="col-2 me-1">
                            <form asp-action="UpdateStatus" method="post" asp-route-Uuid=@item.Uuid>
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                @if (item.Status == "Signed Out")
                                {

                                    <input type="submit" id="clientVM.Status" name="Status" value="Sign In" class="btn btn-success" />

                                }
                                @if (item.Status == "Signed In" || item.Status == null)
                                {

                                    <input type="submit" id="clientVM.Status" name="Status" value="Sign Out" class="btn btn-warning" />
                                    @*Asp-for= "Status" is converted into html code: id = "status" name = "status" *@
                                }
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
        
    </table>
    <div class="btn-group border-bottom">
        <a asp-action="Index"
            asp-route-sortOrder="@ViewData["CurrentSort"]"
            asp-route-pageNumber="@(Model.PageIndex - 1)"
            asp-route-currentFilter="@ViewData["CurrentFilter"]"
            class="btn btn-default @prevDisabled">
            <i class="bi bi-arrow-left"></i>
        </a>
        <a asp-action="Index"
            asp-route-sortOrder="@ViewData["CurrentSort"]"
            asp-route-pageNumber="@(Model.PageIndex + 1)"
            asp-route-currentFilter="@ViewData["CurrentFilter"]"
            class="btn btn-default @nextDisabled">
            <i class="bi bi-arrow-right"></i>
        </a>
    </div>
</div>



