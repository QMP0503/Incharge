
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}


@*     <div class="btn-group border-bottom">
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           asp-route-pageSize="@Model.PageSize"
           class="btn btn-default @prevDisabled">
            <i class="bi bi-arrow-left"></i>
        </a>
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           asp-route-pageSize="@Model.PageSize"
           class="btn btn-default @nextDisabled">
            <i class="bi bi-arrow-right"></i>
        </a>
    </div> *@
    <nav aria-label="Page navigation example">


    <div class="d-flex justify-content-between">

            <!--Page number filter-->
            <div class="dropdown">
                <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Page Size
                </button>


                <ul class="dropdown-menu">
                    <li><a asp-action="Index" asp-route-pageSize="10" class="dropdown-item">10</a></li>
                    <li><a asp-action="Index" asp-route-pageSize="20" class="dropdown-item">20</a></li>
                    <li><a asp-action="Index" asp-route-pageSize="30" class="dropdown-item">30</a></li>
                </ul>


            </div>
        @if (Model.TotalPages > 1)
        {
            <ul class="pagination">
            <li class="page-item">
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   asp-route-pageSize="@Model.PageSize"
                   class="page-link btn btn-default @prevDisabled">
                    <i class="bi bi-arrow-left"></i>
                </a>
            </li>
            @for(int i = 1; i <= Model.TotalPages; i++)
            {
                if(i == Model.PageIndex)
                {
                    <li class="page-item active">
                        <a class="page-link" @* asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@(i)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           asp-route-pageSize="@Model.PageSize" *@
                           >
                            @i
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@(i)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           asp-route-pageSize="@Model.PageSize"
                           class="page-link btn btn-default">
                            @i
                        </a>
                    </li>
                }
            }
            <li class="page-item">
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   asp-route-pageSize="@Model.PageSize"
                   class="page-link btn btn-default @nextDisabled">
                    <i class="bi bi-arrow-right"></i>
                </a>
            </li>
            </ul>
            }
        </div>
    </nav>

