@model Incharge.Service.PagingService.PaginatedList<Incharge.Models.Location>
@using Microsoft.AspNetCore.Identity;
@using Incharge.Service.PagingService;
@using Incharge.ViewModels;
@inject SignInManager<Incharge.Models.User> SignInManager;
@inject UserManager<Incharge.Models.User> UserManager;

@{
    ViewData["Title"] = "Index";
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<nav class="navbar-brand mb-5">
    <div class="row align-content-center">
        <h1 class="text-black m-3 align-text-top font-bold">Location</h1>
    </div>
    <div class="row align-content-center pt-3 pb-3">
    @if (User.IsInRole("Admin"))
    {
        <div class="col pr-2">
            <a asp-action="AddClient" class="btn btn-primary">Add New Location</a>
        </div>
    }
    
        @*Add filter column*@

        <form asp-action="Index" method="get" class="col-8">
            <div class="d-flex gap-1 flex-row-reverse">
                <input class="btn btn-outline-primary" type="submit" value="Search" aria-label="search" />
                <input class="form-control w-25" type="text" placeholder="Search" aria-label="Search" name="SearchString" value="@ViewData["CurrentFilter"]" />
            </div>
        </form>

        <div class="col-2 align-content-end">
            <a asp-action="Index" class="btn btn-primary">Back to Full List</a>
        </div>

    </div>

</nav>
<div class="container">
    <table class="table-responsive table-hover table">
        <thead>
            <tr>
                <th scope="col" class="col-1"></th> @*will juat be colour indicator for if the client is signed in/out or payment is overdued.*@
                <th scope="col" class="col">Name</th>
                <th scope="col" class="col">Capacity</th>
                <th scope="col" class="col">Status</th>
                <th scope="col" class="col">Gym Class</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <div class="col-1">


                            @if (item.Status == "Available" || item.Status == null)
                            {
                                <a asp-action="Details" asp-route-Id="@item.Id" class="btn btn-success"><i class="bi bi-info-square"></i></a>
                            }
                            @if (item.Status == "Unavailable")
                            {
                                <a asp-action="Details" asp-route-Id="@item.Id" class="btn btn-danger"><i class="bi bi-info-square"></i></a>

                            }
                            @if(item.Status == "Under Maintance")
                            {
                                <a asp-action="Details" asp-route-Id="@item.Id" class="btn btn-warning"><i class="bi bi-info-square"></i></a>
                            }
                        </div>
                    </td>

                    <td class="col-4">@item.Name</td>
                    <td>@item.Capacity</td>
                    <td>@item.Status</td>
                    <td>@item.Gymclasses.First().Name</td>
                </tr>
            }
        </tbody>

    </table>
    <div class="btn-group border-bottom">
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled">
            <i class="bi bi-arrow-left"></i>
        </a>
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled">
            <i class="bi bi-arrow-right"></i>
        </a>
    </div>
</div>



